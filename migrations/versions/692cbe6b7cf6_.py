"""empty message

Revision ID: 692cbe6b7cf6
Revises: 
Create Date: 2023-11-16 22:51:14.462748

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '692cbe6b7cf6'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('journals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=40), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('firstname', sa.String(length=255), nullable=False),
    sa.Column('lastname', sa.String(length=255), nullable=False),
    sa.Column('professor', sa.Boolean(), nullable=True),
    sa.Column('phone_number', sa.String(length=10), nullable=True),
    sa.Column('school_name', sa.String(length=255), nullable=True),
    sa.Column('degree_timeline', sa.String(length=255), nullable=True),
    sa.Column('company', sa.String(length=255), nullable=True),
    sa.Column('role_title', sa.String(length=255), nullable=True),
    sa.Column('start_date', sa.BigInteger(), nullable=True),
    sa.Column('bio', sa.String(length=200), nullable=True),
    sa.Column('profile_image', sa.String(), nullable=True),
    sa.Column('is_confirmed', sa.Boolean(), nullable=False),
    sa.Column('confirmed_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('accomplishments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('publications', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('awards', postgresql.ARRAY(sa.String()), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('citations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('publication_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('courses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('professor_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=400), nullable=True),
    sa.Column('subject', sa.String(length=400), nullable=True),
    sa.Column('grades', postgresql.ARRAY(sa.JSON()), nullable=True),
    sa.ForeignKeyConstraint(['professor_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('education',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('undergrad', postgresql.ARRAY(sa.JSON()), nullable=True),
    sa.Column('masters', postgresql.ARRAY(sa.JSON()), nullable=True),
    sa.Column('postdoc', postgresql.ARRAY(sa.JSON()), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('folders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('urls', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('friend_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('userId2', sa.Integer(), nullable=True),
    sa.Column('request', sa.Boolean(), nullable=True),
    sa.Column('requestTime', sa.DateTime(), nullable=True),
    sa.Column('createdAt', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('friends',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('userId2', sa.Integer(), nullable=True),
    sa.Column('friends', sa.Boolean(), nullable=True),
    sa.Column('blocked', sa.Boolean(), nullable=True),
    sa.Column('friendTime', sa.DateTime(), nullable=True),
    sa.Column('createdAt', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ),
    sa.ForeignKeyConstraint(['userId2'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('journalscommittee',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('journal_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['journal_id'], ['journals.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    op.create_table('publications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=600), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('announcements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=600), nullable=True),
    sa.Column('content', sa.String(length=1000), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.BigInteger(), nullable=True),
    sa.Column('modified_at', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('assignments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=1000), nullable=True),
    sa.Column('submits', postgresql.ARRAY(sa.JSON()), nullable=True),
    sa.Column('course', sa.Integer(), nullable=True),
    sa.Column('total_score', sa.Integer(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['course'], ['courses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('chapters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=600), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('courseusers',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    op.create_table('publicationcitations',
    sa.Column('publication_id', sa.Integer(), nullable=True),
    sa.Column('citation_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['citation_id'], ['citations.id'], ),
    sa.ForeignKeyConstraint(['publication_id'], ['publications.id'], )
    )
    op.create_table('publicationusers',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('publication_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['publication_id'], ['publications.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    op.create_table('syllabuses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('htmlcontent', sa.Text(), nullable=True),
    sa.Column('submission', sa.String(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('abstract', sa.String(), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('comment', sa.Boolean(), nullable=True),
    sa.Column('research', sa.Boolean(), nullable=True),
    sa.Column('research_paper', sa.String(), nullable=True),
    sa.Column('root', sa.Boolean(), nullable=True),
    sa.Column('resp_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.BigInteger(), nullable=True),
    sa.Column('updated_at', sa.BigInteger(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('images', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('chapter_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['chapter_id'], ['chapters.id'], ),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('problems',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('assignment_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['assignment_id'], ['assignments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('scores',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('assignment_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['assignment_id'], ['assignments.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('usersassignments',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('assignment_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['assignment_id'], ['assignments.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    op.create_table('commentsreplies',
    sa.Column('commentId', sa.Integer(), nullable=False),
    sa.Column('replyId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['commentId'], ['posts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['replyId'], ['posts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('commentId', 'replyId')
    )
    op.create_table('likes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.Column('announcement_id', sa.Integer(), nullable=True),
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['announcement_id'], ['announcements.id'], ),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('solutions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('submission', sa.String(), nullable=True),
    sa.Column('problem_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('created_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['problem_id'], ['problems.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('solutions')
    op.drop_table('likes')
    op.drop_table('commentsreplies')
    op.drop_table('usersassignments')
    op.drop_table('scores')
    op.drop_table('problems')
    op.drop_table('posts')
    op.drop_table('syllabuses')
    op.drop_table('publicationusers')
    op.drop_table('publicationcitations')
    op.drop_table('courseusers')
    op.drop_table('chapters')
    op.drop_table('assignments')
    op.drop_table('announcements')
    op.drop_table('publications')
    op.drop_table('journalscommittee')
    op.drop_table('friends')
    op.drop_table('friend_requests')
    op.drop_table('folders')
    op.drop_table('education')
    op.drop_table('courses')
    op.drop_table('citations')
    op.drop_table('accomplishments')
    op.drop_table('users')
    op.drop_table('journals')
    # ### end Alembic commands ###
